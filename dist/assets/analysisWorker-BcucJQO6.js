(function(){"use strict";function W(e){return e.board.length+"~"+e.prevMoves.map(t=>t.addedGems[0].join(".")).join("|")}function Q(e,t,n){if(t<0||t>=e.board.length||n<0||n>=e.board.length||e.board[t][n]!==void 0)return;const s=Math.floor(e.board.length/2),i=Math.floor(e.board.length/2);if(e.nMoves===0&&(t!==s||n!==i))return;const o={added:[],removed:[]},c={addedGems:[],removedGems:[],linearShapeUpdate:o};e.board[t][n]=e.currentPlayer,c.addedGems.push([t,n]);for(let l of[-1,0,1])for(let f of[-1,0,1])l===0&&f===0||n+3*l<0||n+3*l>=e.board.length||t+3*f<0||t+3*f>=e.board.length||e.board[t+f][n+l]!==void 0&&e.board[t+f][n+l]!==e.currentPlayer&&e.board[t+f][n+l]===e.board[t+2*f][n+2*l]&&e.board[t+3*f][n+3*l]===e.currentPlayer&&(delete e.board[t+f][n+l],delete e.board[t+2*f][n+2*l],c.removedGems.push([t+f,n+l],[t+2*f,n+2*l]),e.captures[e.currentPlayer]++);c.addedGems.concat(c.removedGems).forEach(([l,f])=>{X(e,l,f,o)}),(e.captures[0]>=5||e.captures[1]>=5||e.linearShapes.some(l=>l.type==="pente"))&&(e.isOver=!0),e.prevMoves.push(c),e.currentPlayer=+!e.currentPlayer,e.nMoves++}function z(e){const t=e.prevMoves.pop();if(!t)return;const n=+!e.currentPlayer;t.addedGems.forEach(([i,o])=>{delete e.board[i][o]}),e.captures[n]-=t.removedGems.length/2,t.removedGems.forEach(([i,o])=>{e.board[i][o]=e.currentPlayer});const s=t.linearShapeUpdate.added.map(i=>i.hash);e.linearShapes=e.linearShapes.filter(i=>!s.includes(i.hash)),t.linearShapeUpdate.removed.forEach(i=>e.linearShapes.push(i)),e.currentPlayer=n,e.nMoves-=1,e.isOver=!1}const J={pente:"11111","open-tessera":"_1111_","pente-threat-4":"1111_","pente-threat-31":"111_1","pente-threat-22":"11_11","open-tria":"_111_","stretch-tria":"_11_1_","extendable-tria":"111__","extendable-stretch-tria-1":"1_11_","extendable-stretch-tria-2":"11_1_","open-pair":"_11_","capture-threat":"100_","stretch-two":"_1_1_","double-stretch-two":"_1__1_","three-gap":"1___1","pente-potential-1":"1_1_1","pente-potential-2":"1__11"},_=new Map;let I=0;for(const[e,t]of Object.entries(J)){_.set(t,{type:e,owner:1,length:t.length}),_.set(t.split("").reverse().join(""),{type:e,owner:1,length:t.length});const n=t.replace(/1/g,"x").replace(/0/g,"1").replace(/x/g,"0");_.set(n,{type:e,owner:0,length:t.length}),_.set(n.split("").reverse().join(""),{type:e,owner:0,length:t.length}),I=Math.max(t.length,I)}const D=new Map;function $(e){const t=D.get(e);if(t)return t;const n=[];for(const s of _.keys())for(let i=0;i<=e.length-s.length;i++){let o=!0;for(let c=0;c<s.length;c++)if(e[i+c]!==s[c]){o=!1;break}o&&n.push({index:i,pattern:s})}return D.set(e,n),n}function X(e,t,n,s={added:[],removed:[]}){e.linearShapes=e.linearShapes.filter(c=>{const l=c.dy,f=c.dx;if(l===0&&t!==c.begin[0]||f===0&&n!==c.begin[1])return!0;for(let d=0,h=c.begin[0],u=c.begin[1];d<c.length;d++,h+=l,u+=f)if((e.board[h][u]===void 0?"_":e.board[h][u].toString())!==c.pattern.charAt(d))return s.removed.push(c),!1;return!0});const i=e.board[t][n],o=i===void 0?"_":i.toString();for(const[c,l]of[[0,1],[1,0],[1,1],[-1,1]]){let f=o,d=t-c,h=n-l;for(let y=1;y<I&&!(d<0||h<0||d>=e.board.length||h>=e.board.length);y++,d-=c,h-=l){const r=e.board[d][h];f=(r===void 0?"_":r)+f}d+=c,h+=l;for(let y=1,r=t+c,a=n+l;y<I&&!(r<0||a<0||r>=e.board.length||a>=e.board.length);y++,r+=c,a+=l){const p=e.board[r][a];f+=p===void 0?"_":p}const u=$(f);if(u)for(const y of u){const r=y.pattern,a=_.get(r),p=[d+c*y.index,h+l*y.index],v={type:a.type,pattern:r,owner:a.owner,begin:p,dy:c,dx:l,length:a.length,hash:[a.type,a.owner,p,c,l].join()};e.linearShapes.some(b=>b.hash===v.hash)||(e.linearShapes.push(v),s.added.push(v))}}}function Y(e){if(e.isOver)return-1/0;if(e.linearShapes.some(o=>o.type.includes("pente-threat")&&o.owner===e.currentPlayer)||e.captures[e.currentPlayer]>=4&&e.linearShapes.some(o=>o.type==="capture-threat"&&o.owner===e.currentPlayer))return 1/0;const t=[];for(const o of e.linearShapes)if(o.owner!==e.currentPlayer&&o.type==="open-tessera"){if(V(e,o).length===0)return-1/0}else o.owner!==e.currentPlayer&&o.type.includes("pente-threat")&&t.push(o);if(!K(e,t))return-1/0;const n=ne(e),s=Math.max(0,Math.min(1,.5+(Z-e.nMoves)/m));let i=ee*s+te*(1-s);for(const[o,c]of Object.entries(n))o in R&&o in U&&(i+=c*(R[o]*s+U[o]*(1-s)));return 10*i}const Z=12,m=4,R={"open-tessera":.7142846665149541,"pente-threat-4":1.460423474901643,"pente-threat-31":1.7926897505119432,"pente-threat-22":1.0820691431942682,"open-tria":2.348847906615784,"stretch-tria":1.6796377537114986,"open-pair":.1583237946582207,"capture-threat":.701008780943482,"stretch-two":.7292003053126962,"three-gap":.5074457767046938,"pente-potential-1":.10513479297955895,"pente-potential-2":.5448641632742927,captures:1.4123467702449712,"4-captures":0,"can-block-trias":.5520212551906103,"non-quiet-moves":.5070259353701644},ee=-.23929567023925047,U={"open-tessera":2.894385172811964,"pente-threat-4":1.4293730441139314,"pente-threat-31":1.339967366177731,"pente-threat-22":1.0946172159443657,"open-tria":1.8448769004339054,"stretch-tria":1.302738715912809,"open-pair":.13047654933945022,"capture-threat":.5792991598862727,"stretch-two":.34384733550884033,"three-gap":.2291155251490014,"pente-potential-1":.512995812429531,"pente-potential-2":.44447810236352725,captures:.9220501800426152,"4-captures":1.0367781104801042,"can-block-trias":.8685945074453137,"non-quiet-moves":.27784749558781685},te=-.04766462636742246,q=["extendable-tria","extendable-stretch-tria-1","extendable-stretch-tria-2","double-stretch-two"];function ne(e){const t={};for(const o in J)o!=="pente"&&(q.includes(o)||(t[o]=0));t.captures=0,t["4-captures"]=0,t["can-block-trias"]=0,t["non-quiet-moves"]=le(e).length,t["move-index"]=e.nMoves;const n=[];for(const o of e.linearShapes)o.type!=="pente"&&(q.includes(o.type)||(t[o.type]+=o.owner===e.currentPlayer?1:-1),o.type.includes("tria")&&o.owner!==e.currentPlayer&&n.push(o));const s=e.captures[e.currentPlayer],i=e.captures[+!e.currentPlayer];return t.captures=s-i,s===4&&(t["4-captures"]+=1),i===4&&(t["4-captures"]-=1),t["can-block-trias"]=Number(K(e,n)),t}function V(e,t){const n=[],s=[];for(let i=0;i<t.length;i++){const o=t.begin[0]+i*t.dy,c=t.begin[1]+i*t.dx;t.pattern[i]!=="_"&&s.push([o,c])}for(const i of e.linearShapes){if(i.type!=="capture-threat"||i.owner===t.owner)continue;const o=i.dy,c=i.dx;for(const l of[1,2]){const f=i.begin[0]+l*o,d=i.begin[1]+l*c;if(s.some(h=>h[0]===f&&h[1]===d)){n.push(i);break}}}return n}function N(e,t){let n=V(e,t[0]);for(let s=1;s<t.length;s++){const i=new Set(V(e,t[s]).map(o=>o.hash));n=n.filter(o=>i.has(o.hash))}return n}function K(e,t){if(t.length===0)return!0;let n="",s=!0;for(const o of t){const c=o.dy,l=o.dx;for(let f=0;f<o.length;f++){const d=o.begin[0]+f*c,h=o.begin[1]+f*l;if(o.pattern[f]==="_"){const u=d+","+h;if(n==="")n=u;else if(n!==u){s=!1;break}}}if(!s)break}return s?!0:N(e,t).length!==0}const M=new Map,re=2e4;function L(e){let t=String(e.currentPlayer);return e.board.forEach(n=>{for(const s in n)t+=s+n[s]+",";t+="."}),t}function oe(e,t,n){const s={depth:n,result:t};if(M.size===re){const i=M.keys().next().value;M.delete(i)}M.set(L(e),s)}const se=["pente-threat-4","pente-threat-31","pente-threat-22","open-tria","stretch-tria","extendable-stretch-tria-2","pente-potential-2","extendable-stretch-tria-1","pente-potential-1","extendable-tria","capture-threat","stretch-two","open-pair","three-gap"],ie=["stretch-two","open-pair","three-gap"],k=Object.fromEntries(se.map((e,t)=>[e,t]));function*ae(e,t=!1,n=1,s=void 0,i=void 0,o=[],c=[]){if(e.nMoves===0){const r=Math.floor(e.board.length/2);yield[r,r];return}const l=new Set,f=function(r){return e.board[r[0]][r[1]]===void 0};if(c.length>0){for(const r of c){const a=r.bestVariation[0];if(!f(a))continue;const p=a[0]+","+a[1];l.has(p)||(yield a,l.add(p))}return}if(s!==void 0&&f(s)&&(yield s,l.add(s.join(","))),i!==void 0){const r=i.result.bestVariation[0];if(r!==void 0&&f(r)){const a=r[0]+","+r[1];l.has(a)||(yield r,l.add(a))}}if(o[n])for(const r of o[n]){if(!f(r))continue;const a=r[0]+","+r[1];l.has(a)||(yield r,l.add(a))}e.linearShapes.sort((r,a)=>r.type in k&&a.type in k?k[r.type]-k[a.type]:r.type in k?-1:a.type in k?1:0);let d=e.linearShapes.slice(),h=!0;const u=d.find(r=>r.owner===e.currentPlayer&&r.type.includes("pente-threat"));if(u&&(d=[u],h=!1),e.captures[e.currentPlayer]===4){const r=d.find(a=>a.owner===e.currentPlayer&&a.type==="capture-threat");r&&(d=[r],h=!1)}const y=d.filter(r=>r.owner!==e.currentPlayer&&r.type.includes("pente-threat"));if(y.length>0){const r=N(e,y);d=y.concat(r),h=!1}t&&(d=d.filter(r=>ie.includes(r.type)),h=!1);for(const r of d){const a=r.dy,p=r.dx;for(let v=0,b=r.begin[0],x=r.begin[1];v<r.length;v++,b+=a,x+=p){if(t&&r.owner!==e.currentPlayer||!f([b,x]))continue;const w=b+","+x;l.has(w)||(yield[b,x],l.add(w))}}if(h)for(let r=0;r<e.board.length;r++)for(let a=0;a<e.board.length;a++){if(e.board[r][a]===void 0)continue;const p=[0,-1,1,-2,2];for(const v of p)for(const b of p)if(!(e.nMoves===1&&(v<=0||b<0||b>v))&&r+v>=0&&r+v<e.board.length&&a+b>=0&&a+b<e.board.length){const x=[r+v,a+b];if(!f(x))continue;const w=x[0]+","+x[1];l.has(w)||(yield x,l.add(w))}}}function le(e){const t=[],n=[],s=[],i=[],o=[],c=[];for(const u of e.linearShapes)if(u.type.includes("pente-threat"))if(u.owner===e.currentPlayer){t.push(u);break}else n.push(u);else["open-tria","stretch-tria"].includes(u.type)?u.owner===e.currentPlayer?s.push(u):o.push(u):["extendable-tria","extendable-stretch-tria-1","extendable-stretch-tria-2"].includes(u.type)&&u.owner===e.currentPlayer?i.push(u):u.type==="capture-threat"&&u.owner===e.currentPlayer&&c.push(u);let l=[];if(t.length>0)l=t;else if(n.length>0){const u=N(e,n);l=[...n,...u]}else l=[...s,...i,...o,...c];const f=[],d=new Set,h=function(u){return e.board[u[0]][u[1]]===void 0};for(const u of l){const y=u.dy,r=u.dx;for(let a=0,p=u.begin[0],v=u.begin[1];a<u.length;a++,p+=y,v+=r){if(!h([p,v]))continue;const b=p+","+v;d.has(b)||(f.push([p,v]),d.add(b))}}return f}let G=0,C=0,B=0,E=0,j=0,F=[],P=[];function ce(e,t,n){P[n]||(P[n]=[]);for(const s of P[n])if(s[0]===e&&s[1]===t)return;P[n].unshift([e,t]),P[n].length>=2&&P[n].splice(2)}function ue(e,t,n,s=1/0,i=!1,o=!0){e=fe(e),M.clear();let c=[];e:for(let l=0;l<t;l++){o&&console.log(`
VARIATION `+(l+1)+" ======================");const f=performance.now(),d=performance.now()+s;try{c.map(r=>r.bestVariation[0])}catch{console.log(c),console.log(W(e))}const h=c.map(r=>r.bestVariation[0]);o&&console.log("excluding "+JSON.stringify(h)+`
`);let u=[];for(let r=1;r<=n;r++){o&&console.log(`searching depth ${r}...`),P=[],G=0,C=0,B=0,E=0,j=0,F=[];const a=u.length>0?u[0].bestVariation:[],p=O(e,r,1,-1/0,1/0,d,!1,a,u,h,!0);if(p.length===0){console.warn("No moves left, returning what we have");break e}if(p[0]===void 0&&console.warn("undefined result",p),!p[0].valid){o&&console.log("ran out of time searching depth "+r),u.length===0&&console.warn("no answer returned because ran out of time on depth "+r);break}if(u=p,o){console.log(G+" normal nodes visited"),console.log("confirm alpha",C,"fail high",B),console.log("ttable hit",E,"ttable miss",j),console.log((F.reduce((b,x)=>b+x,0)/F.length).toFixed(2),"moves generated on average");let v=0;for(const b of F)b>v&&(v=b);console.log("max "+v+" moves generated"),p.slice(0,1).forEach(b=>{const x=b.evalFlag==="exact"?"=":b.evalFlag==="upper-bound"?"≤":"≥";console.log("eval",x,b.eval,JSON.stringify(b.bestVariation))}),console.log("")}if(Math.abs(p[0].eval)===1/0)break}u.length===0&&console.warn("no prev results",u),u[0]===void 0&&console.warn("undefined prev result",u);const y=u[0];i&&e.currentPlayer===1&&(y.eval=-y.eval,y.evalFlag==="lower-bound"?y.evalFlag="upper-bound":y.evalFlag==="upper-bound"&&(y.evalFlag="lower-bound")),c.push(y),c.sort((r,a)=>i&&e.currentPlayer===1?r.eval-a.eval:a.eval-r.eval),o&&(console.log("time taken",performance.now()-f),console.log("---------------------"))}return c}function O(e,t,n,s,i,o,c,l=[],f=[],d=[],h=!1){if(G++,performance.now()>o&&!(n===1&&t===1))return[{eval:0,evalFlag:"exact",bestVariation:[],valid:!1}];const u=Y(e);if(e.isOver||t===0||Math.abs(u)===1/0&&n>1)return[{eval:u,evalFlag:"exact",bestVariation:[],valid:!0}];const y=s,r=[];let a={eval:-1/0,evalFlag:"exact",bestVariation:[],valid:!0};const p=M.get(L(e));if(p&&p.depth>=t){if(E++,p.result.evalFlag==="exact"&&!h)return[p.result];if(p.result.evalFlag==="lower-bound"?s=Math.max(s,p.result.eval):p.result.evalFlag==="upper-bound"&&(i=Math.min(i,p.result.eval)),s>=i&&!h)return[p.result]}else j++;let v=0;const b=ae(e,!1,n,l[0],p,P,f);for(const[x,w]of b){if(d.some(g=>g[0]===x&&g[1]===w))continue;Q(e,x,w);const A=l.slice(1);let H=0;e.linearShapes.some(g=>g.type.includes("pente-threat"))&&(H=1);let S;if(v==0)S=O(e,t-1+H,n+1,-i,-s,o,c,A)[0];else{let g=t>=3&&v>=5?t-2:t-1;g+=H,S=O(e,g,n+1,-s-1,-s,o,!0,A)[0],s<=-S.eval&&-S.eval<=i&&i-s>1?(B++,S=O(e,t-1,n+1,-i,-s,o,!1,A)[0]):C++}if(z(e),!S.valid)return[S];const T={eval:-S.eval,evalFlag:S.evalFlag==="lower-bound"?"upper-bound":S.evalFlag==="upper-bound"?"lower-bound":"exact",bestVariation:[[x,w],...S.bestVariation],valid:S.valid};if(r.push(T),(a.bestVariation.length===0||T.eval>a.eval&&T.evalFlag!=="upper-bound")&&(a=T),a.evalFlag!=="upper-bound"&&(s=Math.max(s,a.eval),a.eval>=i)){a.eval!==-1/0&&ce(x,w,n);break}if(v++,v>=20)break}return F.push(v),a.eval<=y?a.evalFlag=a.eval===-1/0?"exact":"upper-bound":a.eval>=i?a.evalFlag=a.eval===1/0?"exact":"lower-bound":a.evalFlag="exact",c||oe(e,a,t),h?(r.sort((x,w)=>x.evalFlag==="exact"&&w.evalFlag!=="exact"?-1:w.evalFlag==="exact"&&x.evalFlag!=="exact"?1:w.eval-x.eval),r):[a]}function fe(e){return{board:e.board.map(t=>Object.assign({},t)),currentPlayer:e.currentPlayer,captures:{...e.captures},nMoves:e.nMoves,prevMoves:JSON.parse(JSON.stringify(e.prevMoves)),isOver:e.isOver,linearShapes:JSON.parse(JSON.stringify(e.linearShapes))}}onmessage=e=>{const t=JSON.parse(e.data[0]),n=e.data[1];console.profile();for(let s=1;s<10;s++){const i=ue(t,n,s,3e3,!0);postMessage(i)}console.profileEnd()}})();
