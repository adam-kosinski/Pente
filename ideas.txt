MOST THINGS OUT OF DATE

Store all move results not just at the root node, but also from its children via the transposition table (for better move ordering)
 - eh there are probably better ways to improve move ordering
Cache linear shapes in the transposition table
 - doesn't really help

(!!) Quiescence search gives different results if you reorder captures before creating trias; not expected
 - on the surface, it seems to just look for one winning line and then go with that one
 - sometimes it will miss a winning move because it gets pruned, since beta is -Infinity (any move will raise alpha above beta)
 - beta being -Infinity can come from:
   - normal recursion, where the previous call alpha was Infinity
   - if previous call -alpha-1 = -Infinity  =>  alpha was Infinity
 - alpha being Infinity can come from:
   - a child reporting they lost

(!!) I was wondering if quiescence search can trick us when finding a "forced" win, since we didn't look at all possible moves.
Perhaps the opponent had some other non-tactical move along the search that could have stopped the win? 

Implement mate in X (currently if QS finds a long-winded forced win, it stops looking)
 - but don't search too much, a forced win is good enough

Add more double threats to the eval
 - two opponent pente threats (forced win if you don't have a pente threat, you can't block both at once i.e. no intersecting spots, and no captures)
 - pente threat + tria (in some cases this is a forced win)

Function to check if a capture blocks a threat - useful for QS, and for evaluating forced win situations